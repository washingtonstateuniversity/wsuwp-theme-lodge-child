//
// Color Mixin
//
@function color($palette, $tone: 'base') {
	@return map-get(map-get($colors, $palette), $tone);
}



//
// Media Queries
//
// Example: @include mq('tablet-small') { color: red; }
//
@mixin mq($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}



//
// Z-index
//
// Example: z-index: z('site-header');
//
$z-indexes: (
	"outdated-browser",
	"modal",
	"site-header",
	"page-wrapper",
	"site-footer"
);

@function z($name) {
	@if index($z-indexes, $name) {
		@return (length($z-indexes) - index($z-indexes, $name)) + 1;
	} @else {
		@warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
		@return null;
	}
}



//
// Strip Units
//
// Example: $font-size: strip-unit($font-size);
//
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
  }

// Cast to Number
@function number($string) {
	// Matrices
	$strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
	$numbers: 0 1 2 3 4 5 6 7 8 9;

	// Result
	$result: 0;

	// Looping through all characters
	@for $i from 1 through str-length($string) {
		// Do magic
	}

	@return $result;
}



//
// Font Sizing
//
// Example: @include font-size(1);
@mixin font-size($font-size, $line-height: auto, $modifier: 0, $important: false) {

	@if (type-of($font-size) == number) {
		@if (unit($font-size) != "px") {
			@error "`#{$font-size}` needs to be a pixel value.";
		}
	} @else {
		@error "`#{$font-size}` needs to be a number.";
	}

	@if ($important == true) {
		$important: !important;
	} @else if ($important == false) {
		$important: null;
	} @else {
		@error "`#{$important}` needs to be `true` or `false`.";
	}

	// We provide a `px` fallback for old IEs not supporting `rem` values.
	font-size: $font-size $important;
	font-size: ($font-size / $global-font-size) * 1em $important;

	@if ($line-height == "auto") {

		// Define how many grid lines each text line should span.
		// By default, we set it to the minimum number of lines necessary
		// in order to contain the defined font-size, +1 for some breathing room.
		// This can be modified with the `$modifier` parameter.
		$lines: ceil($font-size / $global-baseline) + $modifier;
		$line-height: $lines * $global-baseline;

		line-height: ($line-height / $font-size) $important;
	}

	@else {

		@if (type-of($line-height) == number or $line-height == "inherit" or $line-height == "normal") {
			line-height: $line-height $important;
		}

		@else if ($line-height != 'none' and $line-height != false) {
			@error "Dâ€™oh! `#{$line-height}` is not a valid value for `$line-height`.";
		}

	}

}



//
// Clear margin bottom
//
@mixin clear-margin($position: bottom) {
		margin-#{$position}: 0;
}
